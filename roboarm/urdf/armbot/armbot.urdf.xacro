<?xml version="1.0"?>
<robot name="roscontrol" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="pi" value="3.1415" />
  <xacro:property name="wheel_radius" value="0.15" />
  <xacro:property name="wheel_thickness" value="0.1" />
  <xacro:property name="chesis_length" value="0.6" />
  <xacro:property name="chesis_breadth" value="0.4" />
  <xacro:property name="chesis_height" value="0.2" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="box_inertia" params="mass x y z">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="${(1/12)*mass*(y*y+z*z)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*mass*(x*x+z*z)}" iyz="0.0" izz="${(1/12)*mass*(y*y+x*x)}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="cyl_inertia" params="mass r h">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="${(1/12)*mass*(3*r*r+h*h)}" ixy="0.0" ixz="0.0" iyy="${(1/12)*mass*(3*r*r+h*h)}" iyz="0.0" izz="${(1/2)*mass*r*r}" />
    </inertial>
  </xacro:macro>

  <link name="chesis">
    <visual>
      <geometry>
        <box size="${chesis_length} ${chesis_breadth} ${chesis_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="${chesis_length} ${chesis_breadth} ${chesis_height}"/>
      </geometry>
    </collision>
    <xacro:box_inertia mass="10.0" x="${chesis_length}" y="${chesis_breadth}" z="${chesis_height}"/>
  </link>

  <xacro:macro name="wheel" params="prefix suffix posx posy">
    <link name="${prefix}_${suffix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
      </collision>
      <xacro:cyl_inertia mass="1" r="${wheel_radius}" h="${wheel_thickness}"/>
    </link>
    <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="chesis"/>
      <child link="${prefix}_${suffix}_wheel"/>
      <origin xyz="${0.25*posx} ${0.27*posy} 0" rpy="0 0 0"/>
    </joint>
    <gazebo reference="${prefix}_${suffix}_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material>
    </gazebo>
    <transmission name="${prefix}_${suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="front" suffix="left" posx="1" posy="1"/>
  <xacro:wheel prefix="front" suffix="right" posx="1" posy="-1"/>
  <xacro:wheel prefix="back" suffix="left" posx="-1" posy="1"/>
  <xacro:wheel prefix="back" suffix="right" posx="-1" posy="-1"/>

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/robot_base</robotNamespace>
      <legacyModeNS>true</legacyModeNS>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

</robot>